p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
#  geom_conn_bundle(data = get_con(from = from, to = to), width = 1, alpha = 0.2, aes(colour = ..index..)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
#  geom_conn_bundle(data = get_con(from = from, to = to), width = 1, alpha = 0.2, aes(colour = ..index..)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2) +
theme_void() +
theme(legend.position = "none")
p
View(connections)
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
#  geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
geom_node_point(aes(x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
#  geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
geom_node_point(aes(x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
#  geom_conn_bundle(data = get_con(from = from, to = to)) +
theme_void() +
theme(legend.position = "none")
p
leaf
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
#  geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
geom_node_point(aes(x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to), aes(filter = leaf)) +
theme_void() +
theme(legend.position = "none")
p
# Libraries
library(ggraph)
library(igraph)
# create a data frame giving the hierarchical structure of your individuals.
# Origin on top, then groups, then subgroups
hierarchy <- read.delim("nodes.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# create a vertices data.frame. One line per object of our hierarchy, giving features of nodes.
vertices <- data.frame(name = unique(c(as.character(hierarchy$from), as.character(hierarchy$to))) )
connections <-  read.delim("edges_specific.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# Libraries
library(ggraph)
library(igraph)
# create a data frame giving the hierarchical structure of your individuals.
# Origin on top, then groups, then subgroups
hierarchy <- read.delim("nodes.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# create a vertices data.frame. One line per object of our hierarchy, giving features of nodes.
vertices <- data.frame(name = unique(c(as.character(hierarchy$from), as.character(hierarchy$to))) )
connections <-  read.delim("edges_specific.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# The connection object must refer to the ids of the leaves:
from <- match( connections$from, vertices$name)
to <- match( connections$to, vertices$name)
library(RColorBrewer)
# Create a graph object with the igraph library
mygraph <- graph_from_data_frame( hierarchy, vertices = vertices )
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
#  geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
geom_node_point(aes(x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
#  geom_node_point(aes(x = x*1.05, y=y*1.05)) +
geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
#  geom_node_point(aes(x = x*1.05, y=y*1.05)) +
#  geom_edge_fan() +
#  geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
#  geom_node_point(aes(x = x*1.05, y=y*1.05)) +
#  geom_edge_fan() +
geom_edge_density() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
#  geom_node_point(aes(x = x*1.05, y=y*1.05)) +
#  geom_edge_fan() +
#  scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
geom_edge_density() +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
#  geom_edge_density() +
theme_void() +
theme(legend.position = "none")
p
# It is good to color the points following their group appartenance. Note that the x*1.05 allows to make a space between the points and the connection ends
p + geom_node_point(aes(filter = leaf, x = x*1.05, y = y*1.05, colour = group), size = 3) +
scale_colour_manual(values = rep( brewer.pal(9, "Paired") , 30))
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y=y*1.05)) +
scale_edge_colour_distiller(palette = "RdPu") +
geom_conn_bundle(data = get_con(from = from, to = to)) +
theme_void() +
theme(legend.position = "none")
p
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to)) +
scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none")
p
View(connections)
# Basic usual argument
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y = y*1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
geom_node_text(aes(x = x*1.1, y = y*1.1, filter = leaf, label=name, angle = angle, hjust=hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
# Let's add information concerning the label we are going to add:
# angle, horizontal adjustement and potential flip
# calculate the ANGLE of the labels
vertices$id <- NA
myleaves <- which(is.na( match(vertices$name, connections$from) ))
nleaves <- length(myleaves)
vertices$id[ myleaves ] <- seq(1:nleaves)
vertices$angle <- 90 - 360 * vertices$id / nleaves
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
vertices$hjust <- ifelse( vertices$angle < -90, 1, 0)
# flip angle BY to make them readable
vertices$angle <- ifelse(vertices$angle < -90, vertices$angle + 180, vertices$angle)
# Basic usual argument
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y = y*1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
geom_node_text(aes(x = x*1.1, y = y*1.1, filter = leaf, label=name, angle = angle, hjust=hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
# Basic usual argument
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y = y*1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
#  geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
scale_edge_colour_distiller(palette = "RdPu") +
geom_node_text(aes(x = x*1.15, y = y*1.15, filter = leaf, label = name, angle = angle, hjust = hjust, colour = group), size = 2, alpha = 1) +
geom_node_point(aes(filter = leaf, x = x*1.07, y = y*1.07, colour = group, size = value, alpha = 0.2)) +
scale_colour_manual(values = rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1, 10) ) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.3, 1.3), y = c(-1.3, 1.3))
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
scale_edge_colour_distiller(palette = "RdPu") +
#  geom_node_text(aes(x = x*1.15, y = y*1.15, filter = leaf, label = name, angle = angle, hjust = hjust, colour = group), size = 2, alpha = 1) +
geom_node_point(aes(filter = leaf, x = x*1.07, y = y*1.07, colour = group, size = value, alpha = 0.2)) +
scale_colour_manual(values = rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1, 10) ) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.3, 1.3), y = c(-1.3, 1.3))
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
scale_edge_colour_distiller(palette = "RdPu") +
#  geom_node_text(aes(x = x*1.15, y = y*1.15, filter = leaf, label = name, angle = angle, hjust = hjust, colour = group), size = 2, alpha = 1) +
#  geom_node_point(aes(filter = leaf, x = x*1.07, y = y*1.07, colour = group, size = value, alpha = 0.2)) +
scale_colour_manual(values = rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1, 10) ) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.3, 1.3), y = c(-1.3, 1.3))
p +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
#  geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
p
q = p +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
#  geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
q
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
#  geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none")
p
q = p +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
#  geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
q
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
#  geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to)) +
scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none")
# Basic usual argument
q = p +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
#  geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
p
q
r = q +
#  geom_node_text(aes(x = x * 1.15, y = y * 1.15, filter = leaf, label = name, angle = angle, hjust = hjust, colour = group), size = 2, alpha = 1) +
#  geom_node_point(aes(filter = leaf, x = x * 1.07, y = y * 1.07, colour = group, size = value, alpha = 0.2)) +
scale_colour_manual(values = rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1, 10) ) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.3, 1.3), y = c(-1.3, 1.3))
r
library(RColorBrewer)
# Create a graph object with the igraph library
mygraph <- graph_from_data_frame( hierarchy, vertices = vertices )
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
#  geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to)) +
scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none")
# Basic usual argument
q = p +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
#  geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
# Re-apply feature controls
r = q +
#  geom_node_text(aes(x = x * 1.15, y = y * 1.15, filter = leaf, label = name, angle = angle, hjust = hjust, colour = group), size = 2, alpha = 1) +
#  geom_node_point(aes(filter = leaf, x = x * 1.07, y = y * 1.07, colour = group, size = value, alpha = 0.2)) +
scale_colour_manual(values = rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1, 10) ) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.3, 1.3), y = c(-1.3, 1.3))
r
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
scale_edge_colour_distiller(palette = "RdPu") +
#  geom_node_text(aes(x = x * 1.15, y = y * 1.15, filter = leaf, label = name, angle = angle, hjust = hjust, colour = group), size = 2, alpha = 1) +
#  geom_node_point(aes(filter = leaf, x = x * 1.07, y = y * 1.07, colour = group, size = value, alpha = 0.2)) +
scale_colour_manual(values = rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1, 10) ) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.3, 1.3), y = c(-1.3, 1.3))
# Let's add information concerning the label we are going to add:
# angle, horizontal adjustement and potential flip
# calculate the ANGLE of the labels
vertices$id <- NA
# Libraries
library(ggraph)
library(igraph)
# create a data frame giving the hierarchical structure of your individuals.
# Origin on top, then groups, then subgroups
hierarchy <- read.delim("nodes.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# create a vertices data.frame. One line per object of our hierarchy, giving features of nodes.
vertices <- data.frame(name = unique(c(as.character(hierarchy$from), as.character(hierarchy$to))) )
connections <-  read.delim("edges_specific.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# The connection object must refer to the ids of the leaves:
from <- match( connections$from, vertices$name)
to <- match( connections$to, vertices$name)
# Let's add information concerning the label we are going to add:
# angle, horizontal adjustement and potential flip
# calculate the ANGLE of the labels
vertices$id <- NA
myleaves <- which(is.na( match(vertices$name, connections$from) ))
nleaves <- length(myleaves)
vertices$id[ myleaves ] <- seq(1:nleaves)
vertices$angle <- 90 - 360 * vertices$id / nleaves
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
vertices$hjust <- ifelse( vertices$angle < -90, 1, 0)
# flip angle BY to make them readable
vertices$angle <- ifelse(vertices$angle < -90, vertices$angle + 180, vertices$angle)
library(RColorBrewer)
# Create a graph object with the igraph library
mygraph <- graph_from_data_frame( hierarchy, vertices = vertices )
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to)) +
scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none")
# Labels
# Basic usual argument
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x*1.05, y = y*1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, colour = "skyblue", width = 0.9) +
#  geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
# Re-apply feature controls
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, aes(colour = ..index..)) +
scale_edge_colour_distiller(palette = "RdPu") +
#  geom_node_text(aes(x = x * 1.15, y = y * 1.15, filter = leaf, label = name, angle = angle, hjust = hjust, colour = group), size = 2, alpha = 1) +
#  geom_node_point(aes(filter = leaf, x = x * 1.07, y = y * 1.07, colour = group, size = value, alpha = 0.2)) +
scale_colour_manual(values = rep( brewer.pal(9,"Paired") , 30)) +
scale_size_continuous( range = c(0.1, 10) ) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.3, 1.3), y = c(-1.3, 1.3))
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, colour = "skyblue") +
geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, colour = "skyblue") +
geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
# Libraries
library(ggraph)
library(igraph)
# create a data frame giving the hierarchical structure of your individuals.
# Origin on top, then groups, then subgroups
hierarchy <- read.delim("nodes.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# create a vertices data.frame. One line per object of our hierarchy, giving features of nodes.
vertices <- data.frame(name = unique(c(as.character(hierarchy$from), as.character(hierarchy$to))) )
connections <-  read.delim("edges_specific.tsv", header = TRUE, sep = "\t", quote = "\"",
dec = ".", fill = TRUE, comment.char = "")
# The connection object must refer to the ids of the leaves:
from <- match( connections$from, vertices$name)
to <- match( connections$to, vertices$name)
# Let's add information concerning the label we are going to add:
# angle, horizontal adjustement and potential flip
# calculate the ANGLE of the labels
vertices$id <- NA
myleaves <- which(is.na( match(vertices$name, connections$from) ))
nleaves <- max( length(myleaves), 1)
vertices$id[ myleaves ] <- seq(1:nleaves)
vertices$angle <- 90 - 360 * vertices$id / nleaves
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
vertices$hjust <- ifelse( vertices$angle < -90, 1, 0)
# flip angle BY to make them readable
vertices$angle <- ifelse(vertices$angle < -90, vertices$angle + 180, vertices$angle)
library(RColorBrewer)
# Create a graph object with the igraph library
mygraph <- graph_from_data_frame( hierarchy, vertices = vertices )
# Basic usual argument
p = ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to)) +
scale_edge_colour_distiller(palette = "RdPu") +
theme_void() +
theme(legend.position = "none")
ggraph(mygraph, layout = 'dendrogram', circular = TRUE) +
geom_node_point(aes(filter = leaf, x = x * 1.05, y = y * 1.05)) +
geom_conn_bundle(data = get_con(from = from, to = to), alpha = 0.2, width = 0.9, colour = "skyblue") +
geom_node_text(aes(x = x * 1.1, y = y * 1.1, filter = leaf, label = name, angle = angle, hjust = hjust), size = 1.5, alpha = 1) +
theme_void() +
theme(
legend.position = "none",
plot.margin = unit(c(0, 0, 0, 0), "cm"),
) +
expand_limits(x = c(-1.2, 1.2), y = c(-1.2, 1.2))
